v3.1 - Authoratative server update
- Added the ability to set the highscores for other users via:
	- player's ID : WUScoring.SubmitScoreForUser( user, score [, game_id, onSubmitted, onSubmissionFailed] )
	- username or email : SubmitScoreForUsername( user, score [, game_id, onSubmitted, onSubmissionFailed] )
	
v3.0
- Fixed a bug that overwrote your setting of how many scores to show when set on the prefab
- Added a configuration panel to the Wordpress dashboard 
	- How many scores to return is fetched from the website on a per-game basis
	- If no value is set for the current game, the global value you set will be used
	- If you manually specify how many entries to return, that will still override any other value
- Added a Shortcode to display your highscores on your website
- Added a Widget to display your highscores in your widget area. Set to 0 to display a random game's score
- You can now fetch scores by highest value or lowest value
	 
v2.1
- Changed the flow of things making v2.1 no longer compatible with earlier versions. Code changes are required to start using 2.1 
- Removed OnGUI support
- Created 2 UnityUI prefabs: (Note, they must remain in a Resources folder and must not be renamed !!!)
	- WUScoringUGUI is the main window that shows the scores
	- WUScoreEntryPrefab is the prefab corresponding to one entry in WUScoringUGUI
- WUScoring is now a static class so no need any more to derive from it
- The actual window that shows the scores now has a close button that you can use to trigger your own code
- Fetching scores is no longer a single command. Before calling FetchScores you first need to call WUScoringUGUI.SpawnInstance(canvas)
- WUScoringUGUI.SpawnInstance takes 2 params:
	- Canvas is the canvas to show the window in and is mandatory
	- Limit specifies how many entries to show. If you omit this value it will use the value you set in the prefab
- SubmitScore now takes 2 parameters:
	- score is the score you want to submit and is mandatory
	- game_id (optional) is an alternate game id in case you want to have multiple scoreboards in one game. Defaults to the game id in WPServer
- FetchScores now takes 2 parameters: (both are optional)
	- limit determines how many scores to fetch. Defaults to the value in the prefab
	- game_id is an alternate game id in case you want to have multiple scoreboards in one game. Defaults to the game id in WPServer
- Determining which score to highlight no longer works by comparing your local, mutable names. The server now indicates which (if any) to highlight


v2.0
- This update requires that the wuss_scoring plugin on the website be replaced with this version
- Removed the WUSServer class
- All functions now use the WPServer class installed with the WULogin kit
- Calling the server now requires a lot more params due to WPServer's agnostic nature. All functions updated to include them for you
- Added two constant strings for internal use: scoring_filepath and SCORINGConstant
- Actions are now sent as strings, not ints
- Fixed the bug where not setting the game id when updating a category caused the update to fail
- Updated the server code to call the new 'wuss plugin'-agnostic settings.php file, simplifying the unity_funtions.php script
- Renamed the functions on the server
- Removed the ShowPleaseWait function from WUScoringGUI and now use the static version in WPServer

v1.3
Now fetches GameID from WULogin, thereby guaranteeing the game ids match. Still makes provision for custom game ids in case you need that functionality
Now uses the public function in WUServer to create the WWW connection

v1.2
Simplified development by:
-removing the need to specify your website URL. Now uses the value alrady set in WUSserver
-removing the need to specify wether you are working online or locally. Now uses the value alrady set in WUSserver

v1.1
- Added multisite installation support
- Removed duplicate scripts. Now uses WULogin's copies
- Added wuscoring_pre and wuscoring_post filters for custom plugins
- Moved execution from immediately to Wordpress's 'shutdown' filter

v1.0
Initial release