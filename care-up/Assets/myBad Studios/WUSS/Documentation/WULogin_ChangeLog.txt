v5.1.2
- Updated the wuss_login plugin to accomodate the new search functions in the dashboard. Update your plugin to this version
- Added yet documentation to help new people get started with the kit and hopefully answer more of the commonly asked question

v5.1.1
- Added a new demo scene demonstrating how to use the WULogin kit across different scene loads
- Created a new login prefab from WULoginCanvas which does not contain the WPServer component
	- Use this when you are using WPServer as a standalone singleton loaded during bootstrap

v5.1
- Added a new demo scene to demonstrate loggin in and out of an account with absolutely no GUI at all. 100% code based.
- Added a new panel to the existing sample login prefab to be used with WordPress Serials
- Added native support for WordPress Serials meaning:
	- new settings will appear in the login prefab if WordPress Serials is installed which
		1. Validates whether ornot a product is registered
		2. Fetches the registered serial if it exists
		3. Determines if a serial is required to exit the login prefab or if the serial is optional
	- new static properties
		1. HasSerial
		2. SerialNumber
		3. RequireSerialForLogin
- Updated WordPress Login localisation to include support for WordPress Serials
- Added do_not_destroy_this to WPServer
- Added a prefab that contains ONLY WPServer
	- Use this during bootstrap scenes to load only the server access component so that all kits will always have access to the server
		even after their respective prefabs were destroyed during scene changes. 
		NOTE: if you use that prefab, make sure your login prefab does not have an instance of WPServer on it also
- Updated WPServer to remove duplicate instances if detected
		NOTE: when in the same scene there is no guarantee which one will remain. Make sure to only have one instance at all times

v5.0.1
- Fixed missing code from the wuss_login plugin
- Added arrow keys navigation to the login sample prefab's fields

v5
- Converted the code to use C#6
- Simplified / shortened the code in the demo scene, GUI and WULogin using C#6 syntax
- Greatly simplified the personal details tab system making it easier to customise
- Fixed a bug which prevented you from creating new games from the multisite admin dashboard screen
- Added support for up to 25 languages per game
- Now ships with localisation for English, Afrikaans, German* and Chinese*
	* Special thanks to Michael Borgers for the translations
- Created the WPServerErrorException custom exception
- WPServer.cs now throws exceptions rather than using Goto statements and labels
- Contacting the server now sends data only via GET or POST, no longer duplicating the data "just in case"
- Removed data structure checks when calling the server for platforms that have been removed from Unity's Build Settings screen
- Broke up the long and confusing CallServer function into smaller functions to clarify what each part does
- Added a ContactServer overload that takes an enum as the action. You are no longer forced to convert the enum to a string first
- Renamed the server state enum from WULServerState to WPServerState
- Added Automatic Reference Counting to WPServer
- WPServer's state now only changes from Contacting to Done when ALL active server requests have completed
- WPServer now triggers an event upon server state changes
- Game IDs are now set by choosing the game from a drop down list. No need to manually enter the Game ID found in the dashboard any more
- Game IDs are now selected from a dropdown box which means support for manually selecting random values have been removed
- Modified the WULogin functions to use enums, not strings
- Made a number of previously public variables into private variables that cannot be changed at runtime, only set via the inspector
	- Examples: the urls to your website, which url to use, the game id, meta data to fetch, the size of your Gravatar etc.
- If WordPress Money is installed:
	- The names of the currencies you use are now accessed at runtime using the public CurrencyNames property
	- Added a static CurrencyString( string currency_name ) function to format the currency name as used in the usermeta table
	- Added a public CurrencyString( int index ) overload to call CurrencyString via the currency's array index instead
	- Added public Cash( int index ) and Cash(string currency_name) functions to fetch the current balance of specific currencies
- Changed previous readonly strings into const strings instead
- WUUGLoginGUI now derives from WUUGLoginLocalisation but your own custom GUIs can still derive directly from WULogin as always
- Added a bunch of new panels to the demo prefab 
	- A high scores panel. Optionally trigger the WUScoring.FetchScores if the scoring kit is installed
	- A panel to show a store in or, alternatively, use this panel's display function to load a shop scene instead
	- A general purpose panel... just in case you have need for one more...
	* NOTE: Localisation is not supported in optional panels. You will have to add that yourself if needed
- Removed a bunch of "using" includes in files that didn't use them
- Force the static data to be set after login before your custom responses are called instead of potentially later that same frame
- Force the static data to be cleared on logout before calling your custom actions
- Removed the need to call InitLoginSystem in the GUI's Start function
- Automatic fetching of your Gravatar image on login is now an optional toggle
- Prefab updated to now show a spinning graphic and "Please wait" text while busy contacting the server
- WULogin now allows you to fetch game names and their associated id's at runtime
- WULogin now allows you to create new games on your website directly from within the Unity editor (logged in site admins only)
- Updated the demo scene
	- Scans the local list of game definitions for a game called Demo Game
	- If required it will fetch the list of games you created on your website
	- If "Demo Game" is not found it will create the game on your website
- Fixed a bug on Multisites that prevented you from seeing the WUSS sub menus

v4
- Unity broke the WWW class in 2017.3 meaning this asset stopped working in 2017.3
- V4 replaces the old version that relied on WWW and now uses UnityWebRequest instead
- Since this means some versions of U5 will not be supported:
	- I am leaving the WWW version for use by anyone NOT using 2017.3
	- Anyone using 2017.3 or later will receive v4 when they download the asset
- Thus, 2017.3 is the new minimum version of Unity to use to receive updates
- The previous version has now reached it's end of life and will still work just fine, but won't get further updates
- v4 now includes a callback when you click on the "Return to game" button in the post login menu: onResumeGame
- Removed the IsValidEmailFormat function from WUUGLoginGUI.cs and now use the string extension function instead

v3.3.3
- FIXED: Register account email field was referencing the password reset email field to test if the field was empty

v3.3.2
- FIXED: Remember me was not working before. Replaced the bool with a property linking to the Toggle component
- UPDATE: Encapsulated the masses of public fields that never need changing. This just tidies up the inspector quite a lot

v3.3.1
- UPDATE: Added a new struct called Vector2Int. An int version of Vector2D
- UPDATE: Most types can convert ToString but not the other way around. I now added a FromString method to a bunch of common types
- FIX: Unity2017 seems to have introduced a breaking change to how I store and use cookies. I have updated teh cookie class to compensate
- FIX: Unity2017 changed how the WWW class's error value works. This broke the fetching of images from Gravatar. That is now fixed

v3.3
- UPDATE: Server response is now enclosed within <CML> and </CML> braces to indicate the portion of the server response that is
	the actual server response. This cuts out any preceding text and any text sent after the data and thus prevents invalid data errors
- Prevent an error when incorrectly calling ContactServer without an instance thereof existing
- Updated CML to version 3 (Wordpress Login Standalone version)
- Added a warning when a web browser rejects the data you send it via a WWWForm (i.e. when using the POST method)
- Fixed a warning in settings.php about accessing the security token if it was not sent
- Updated unity_functions to remove the warnings about the deprecated functions since WordPress 4.5
- modified the flow of the WPServer.CallServer function and moved all error reporting to the end of the function

v3.2.1.2
- Fixed compatibility issue with Unity2017
- Allow for automatic fetching of player's high score during login if the Wordpress Scoring asset is imported
- Added a new static variable through which to access the player's high score if the Scoring asset is imported: WULogin.highscore
- Added a new prefab that adds Wordpress Login to it's own Canvas instead of you having to make it a child of an existing canvas
- Added an option to WPServer to make the Canvas WPServer is on persist between scenes. Ideal use would be during a bootstrap scene

v3.2.1.1
- Fixed a bug in the wuss_login plugin where it sent back sample data for my use during development only
	Please update your plugin with the included version to avoid any errors this bug causes
	 
v3.2.1
- Fixed WordPress Money support by supporting new currency name format
- Added the option to set the size of the Gravatar that is returned
- Now store Gravatar as both Texture2D and Sprite
- Added events to notify you when the Gravatar image has been fetched
	- Register to either onGravatarTextureFetched or onGravatarSpriteFetched
- Apple plans to remove all support for HTTP. This causes a warning when fetching the Gravatar
  Gravatar is now fetched via HTTPS to avoid this warning and to future proof WULogin
- Updated demo scene from OnGUI to UGUI and use the Gravatar Sprite as the new button to open the PostLogin menu

v3.2
- Added support for the official WUSS virtual currency system
	- Checks to see if it is installed or else support is removed
	- Fetch currency balance(s) during login so you don't have to fetch them individually afterwards
	- Triggers an event if currency was received outside of the game or while the app was closed
- Added a new shortcode to show WebGL builds on your webpage
	- Add gid to the shortcode to show the game's poster as a link to load the game
	- Add "autoload=true" to the shortcode to load the game without the placeholder image
	- You can also specify a default placeholder graphic in the WUSS Portal to be used by all players without gid specified
	- Should you not specify a default image, one will be provided for you
- Added a new ZIP file called WebGL_BUILDS_Folder. Extract this in the root of your domain and upload all your WebGL builds to there
- Alternatively, specify an alternate designated folder in the Portal where your builds will be uploaded to

v3.1.1
- WPServer now trims the provided URL to remove unwanted spaces in the URL
- (Standalone version) Encoder class trims the returned base64 string before decoding it in case of extra spaces at the end
- Updated outdated documentation
- Added catalogue and discount coupon for renderer.site

v3.1
- Added a new, optional, security field to WPServer, per game. 
	- If used a corresponding value must be set in Wordpress
	- If used it will add an MD5 field to all server calls to authenticate the origin as your game
- Introduced the WUSS Portal into the plugin. Plugin now needs to be activated where before it was optional
	- All other packages that include settings will register as sub menus of wuss_login in the dashboard
	- User account status (Good standing, suspended and banned) are now handled by wuss_login
	- The WUSS portal includes numerous Wordpress ShortCodes and widgets to display on your web pages
		- Future kits will most likely introduce more but will be inside their respective packages
		- A number of settings can be set on this page
	- Added a new POST type to Wordpress called wuss_games. 
		- Games are now defined in Wordpress using the Wordpress editor
		- Defining a game this way will assign your game a Game Id. 
		  It is highly recommended that you use this and not pick values at random any more
	- Since the ShortCodes and widgets are going to increase in number over time, they will be kept up to
	  date on my website, rather than in the kit: http://mybadstudios.com/wordpress-systems/wuss-portal/
- Introduces a new capability to Wordpress: manage_wuss. 
	- Only administrators are given this capability
	- This capability is required to see the WUSS portal in the dashboard
- Multisites: All kits are now updated to work only at the network level.
	- Please deactivate all WUSS kits on a per-site level, if any, before installing this new plugin
	- This will not affect how the kits function or break any existing projects
	  All kits were always usable across all sites so per-site activation was unnecessary
- To generate the security table, please be sure to activate this plugin at least once after updating 

*** NOTE *** 
Use of the ShortCodes and widgets are entirely optional
How to use ShortCodes and widgets and how to edit CSS fall outside the scope of my support

v3.0.2
- Added the option to make the server no longer show on screen error messages at runtime
- Hid the "Attempt to auto login" boolean that was left public by mistake and caused lots of confusion as a result
- Rearranged the WPServer fields in the Inspector. Should be even easier to understand now
- Removed used classes from MBSCore (Standalone version only)
- Removed some outdated code left over from the OnGUI version

v3.0.1
- Added a font for the GUI since the built in Unity font was coming up as empty

v3.0
- Removed the StreamReader and StreamWriter functions along with System.IO from CML.cs when building for WinRT
- Removed the OnGUI Login prefab and related Skin and Textures

v2.1.1
-Fixed a bug that prevented you from sending "About me" info that contained spaces

v2.1
- Removed WULoginProfileImage script as it's become completely redundant
- User profile image is automatically fetched if the email is fetched during login
- User profile image is now available under WULogin.user_gravatar if fetched or will be null otherwise
- Moved gravatar type seection to WULogin base class
- Added UGUI support and a new prefab to use in place of the OnGUI version (Leaving the OnGUI version as legacy)

v2.03
- Fixed a bug with the WPServer that causes issue with the WUData kit

v2.02
- Enabled custom error handling in the event of the server reporting something going wrong

v2.01
- Fixed a bug to enable Firefox support

v2.0
- This update requires that the wuss_login plugin on the website be replaced with this version
- Introduced an extra step before you can use the login kit. In Start, call InitLoginSystem as early as possible
- Replaced the meta data request CSV string field with a string array for simplicity
- Extracted the server contact routines into a generic, standalone class (WPServer) to be shared by all other WUSS kits
- Removed the functions that trigger the delegate actions and call them from the new WPServer class directly
- Also removed the website URL and online/offline checks from WULogin to WPServer.
- The WULogin prefab is updated to hold the WUServer component by default but WUServer can be placed on another object if desired
- Calling the server now requires a lot more params due to it's generic nature. All functions updated to include them for you
- Delegate functions now receive server responses as "CML" objects, not as the generic "object" class
	- This saves you the initial explicit casting before you can use it
	- but also means you need to fetch the data from within the response using response[0] or response.GetFirstNodeOfType(LOGINConstant) as appropriate
	- You now also get access to the entire server response, including error messages and debug info, if any
- Added two new constants: login_filepath and LOGINConstant.
- Login_filepath is for internal use only. LOGINConstant matches the return type from the server
- Added a WULActions enum that I use to call the server, instead of using the WULStates enum used for the GUI state machine
- WPServer now sends actions as strings instead of ints
- Sorted the compatibility issue that prevented the kit from working on PS Vita and Firefox browser
	- It should now work with everything! Testing continues
- Moved ShowPleaseWait function into WPServer so all kits can fetch it from there instead of creating duplicate code

On the server
- Updated the Wordpress plugin to make the login kit's code more easily readable in existing and future add-on components
- Removed the pre- and post- functions as they didn't serve any real purpose. If you need it back, please let me know.
- Now uses AJAX functions to trigger the code when appropriate instead of forcing the code to run during the SHUTDOWN action
- AJAX functions also add an extra level of protection against calling code while not logged in
- Renamed the functions in a paranoia driven attempt at website hacking prevention
- Force function name prefixes to prevent my code from being used as an exploit to run arbitrary code on your site

v1.3
- This update requires that the WUPlugin on the website be replaced with this version
- WULogin prefab now allows you to specify what fields to return upon login and also allows you to fetch any piece of info from the usermeta table. 
- All the info returned during login is stored in a publicly accessible CMLData variable called fetched_info
- logged_in variable is now set automatically upon login and logout. You no longer need to do this manually in the GUI script
- WULogin now contains a Static WULogin.GameID field that other kits can use to make sure all WU kits use the same game ID
- WUServer now contains a public function to generate the WWW request. All other WU kits will use this function to contact the server
- WUServer has been updated to fix some login issues on iOS
- Fixed the bug where logging in without first logging out caused the previous login's cookie to be used
- You are now able to test web player projects in the editor
- Updated WULProfileImage to only fetch personal info if the email was not requested during login, thereby saving one extra round trip to the server
- Now adds a WUL define to the project

v1.22
- Modified the method for fetching your gravatar image. You can use it as always or you can now pass in the type of image of
gravatar you want to show. Simply use the new WULGravatarTypes enum as the second param.
- Updated the WULProfileImage script so you can select your gravatar type from the inspector
- Added the WUServer_Instance property to WUServer in preparation for dependent kit updates

v1.21
- Modified the WUCookie script to remove the deprecated warning introduced in Unity 4.5 and thus made it more future proof

v1.2
- Added multisite installation support
- Added wulogin_pre and wulogin_post hooks for custom plugins
- Moved execution from immediately to Wordpress's 'shutdown' filter for improved compatability with 3rd party plugins on your website
NOTE: This update will break a previous install if installed on a multisite

v1.11
- Fixed a security issue introduced in v1.1
- Modified this file so the upload would work...

v1.1
- Now includes a new class WULProfileImg. 
- After login, player's preofile image will be available from static WULProfileImg.ProfileImage
- Updated the Wordpress plugin to fix a strange bug that occurs in the WUData package

v1.0
- Initial release