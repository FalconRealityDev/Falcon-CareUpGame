/* ------------------------------------------------------------------------
	CML Function List
	-----------------------
	virtual public void Initialize() 
	virtual public CMLData First
	virtual public CMLData Last 
	virtual public bool LoadFile(string filename) 
	virtual public bool OpenFile(string FileName)
	virtual public bool ParseFile(string data) 
	virtual public bool Load(string PrefName)
	virtual public bool Save(string PrefName)
	virtual public bool SaveFile(string FileName)

	virtual public string ToString(bool include_id = true)
	
	virtual public void ImbedCMLData() 
	virtual public bool Join(CML other)

	virtual public bool AddNode(string data_type, string add_data = "") 
	virtual public bool InsertNode(string data_type, string add_data = "") 
	virtual public bool InsertNode(int index, string data_type, string add_data="") 
	virtual public bool RemoveNode(int index) 
	virtual public bool RemoveCurrentNode() 

	virtual public bool PositionAtNode(int index) 
	virtual public bool PositionAtFirstNode() 
	virtual public bool PositionAtLastNode() 
	virtual public bool PositionAtNextNode()
	virtual public bool PositionAtPreviousNode() 
	virtual public bool PositionAtFirstNodeOfType(string data_type) 
	virtual public bool ContainsANodeOfType(string data_type) 

	virtual public CMLData GetFirstNodeOfType(string data_type) 
	virtual public int GetFirstNodeOfTypei(string data_type) 
	virtual public CMLData GetLastNodeOfType(string data_type) 
	virtual public int GetLastNodeOfTypei(string data_type) 

	virtual public List<CMLData> DataWithField(string field, string val = "") 
	
	virtual public List<CMLData> Children(int index = -1) 
	virtual public List<CMLData> AllChildNodes(int index = -1) 
	virtual public List<int> Childreni(int index = -1) 
	virtual public List<int> AllChildNodesi(int index = -1) 
	virtual public List<CMLData> AllDataOfType(string type_name, int starting_index = 0, string stop_at_data_type = "")
	virtual public List<int> AllDataOfTypei(string type_name, int starting_index = 0, string stop_at_data_type = "")

	CML Properties
	-----------------------
	public float CMLVersion
	public CMLData this [int index] 
	virtual public int Count 

/* ----------------------------------------------------------------------- */

	CMLData Function List
	-----------------------
	public void Clear()	//removes all entries in this variable

	//sets the value of a new or existing field
	virtual public void Set(string name, string data) 
	virtual public void Seti(string name, int data) 
	virtual public void Setf(string name, int data) 

    //updates or creates a field
    virtual public void Add( int qty, string name )
    virtual public void Addf( float qty, string name )
    virtual public void Addl( long qty, string name )
    virtual public void Subtract( int qty, string name )
    virtual public void Subtractf( float qty, string name )
    virtual public void Subtractl( long qty, string name )

	//returns data stored in the keys, typecasted to a specific type...
	virtual public int Int(string named) 
	virtual public bool Bool(string named)
	virtual public Rect Rect(string named) 
	virtual public float Float(string named) 
	virtual public string String(string named) 
	virtual public Vector2 Vector2(string named) 
	virtual public Vector3 Vector3(string named) 
	virtual public Quaternion Quaternion(string named) 
	
	virtual public void AddToData(string value) 				//adds data to the unordered list: data
	virtual public void ProcessCombinedFields(string combined)	//add multiple fields at once
	virtual public string ToString(bool include_id = true)		//return the variable as a CML string
	virtual public bool Remove(string name = "value")			//remove a field from this CMLData
	virtual public CMLData Copy(bool include_id = true)			//returns a duplicate of this variable

	CMLData Properties / public fields
	----------------------------------
	public string this 					[string field_name]
	virtual public int 					ID						//returns the current node's ID
	public string						data_type				//the node name of this CMLData
	public Dictionary<string, string>	defined					//all the fields stored in this CMLData
	public List<string>					data					//all unordered list items
	public string[]						Keys					//all field names in this CMLData
	public string[]						Values					//all values in this CMLData
	public object						obj						//holds any random object you wish to attach to the node
